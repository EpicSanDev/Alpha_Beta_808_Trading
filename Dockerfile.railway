# AlphaBeta808 Trading Bot - Railway Optimized Dockerfile
FROM python:3.11-slim

LABEL maintainer="AlphaBeta808Trading"
LABEL description="Automated cryptocurrency trading bot - Railway deployment"

# Set environment variables for Railway
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app/src:/app \
    FLASK_ENV=production \
    DEBIAN_FRONTEND=noninteractive \
    PORT=5000

# Set working directory
WORKDIR /app

# Install system dependencies (minimal for Railway)
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    build-essential \
    curl \
    ca-certificates \
    pkg-config \
    libssl-dev \
    libffi-dev \
    python3-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements first for better Docker layer caching
COPY requirements.txt .

# Install Python dependencies optimized for Railway
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# First install core dependencies that flask-socketio needs
RUN pip install --no-cache-dir --timeout=600 \
    "eventlet>=0.33.0" \
    "bidict>=0.21.0" \
    "python-engineio>=4.0.0"

# Install flask-socketio specifically
RUN pip install --no-cache-dir --timeout=600 "flask-socketio>=5.3.0"

# Install other critical dependencies
RUN pip install --no-cache-dir --timeout=600 \
    "flask>=2.3.0" \
    "flask-cors>=4.0.0" \
    "werkzeug>=2.3.0" \
    "python-dotenv>=0.20.0" \
    "requests>=2.28.0"

# Try to install remaining dependencies from requirements.txt
RUN pip install --no-cache-dir --timeout=600 -r requirements.txt || \
    (echo "Some packages failed to install, continuing with core dependencies...")

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p logs models_store backtest_results reports results web_interface/static web_interface/templates

# Test that flask_socketio can be imported
RUN python -c "import flask_socketio; print('flask_socketio imported successfully')" || \
    (echo "flask_socketio import failed, installing again..." && \
     pip install --no-cache-dir --force-reinstall "flask-socketio>=5.3.0" "eventlet>=0.33.0")

# Health check for Railway
HEALTHCHECK --interval=60s --timeout=30s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:${PORT}/health || exit 1

# Expose the port Railway expects
EXPOSE ${PORT}

# Railway startup command - use our robust startup script
CMD ["python", "railway_startup.py"]
