apiVersion: v1
kind: Secret
metadata:
  name: trading-secrets
  namespace: alphabeta808-trading
type: Opaque
stringData:
  # IMPORTANT: Ce fichier est un template pour les secrets locaux.
  # En production, les secrets sont gérés via GitHub Actions et les GitHub Secrets.
  # 
  # Pour déployer localement, utilisez le script: ./deploy-with-secrets.sh
  # Pour configurer GitHub Secrets, utilisez: .github/setup-secrets.sh
  
  # Binance API credentials (REQUIS)
  # Obtenez ces clés depuis votre compte Binance:
  # - Pour staging: utilisez les clés du testnet
  # - Pour production: utilisez les clés du mainnet (ATTENTION!)
  binance-api-key: "YOUR_BINANCE_API_KEY"
  binance-api-secret: "YOUR_BINANCE_API_SECRET"
  
  # Webhook secret pour la communication sécurisée
  # Générez avec: openssl rand -hex 32
  webhook-secret: "YOUR_WEBHOOK_SECRET"
  
  # Credentials pour l'interface web d'administration
  web-admin-user: "admin"
  web-admin-password: "your_secure_admin_password"
  
  # Configuration SMTP pour les notifications email (optionnel)
  smtp-password: "your_smtp_password"
  
  # URL de base de données (optionnel, utilise SQLite par défaut)
  database-url: "sqlite:///app/data/trading.db"

---
# Template pour les secrets spécifiques à l'environnement
# Ces secrets sont automatiquement créés par le CI/CD
apiVersion: v1
kind: Secret
metadata:
  name: environment-secrets
  namespace: alphabeta808-trading
type: Opaque
stringData:
  # Ces valeurs sont injectées automatiquement par GitHub Actions
  environment: "production"  # ou "staging"
  deployment-timestamp: ""
  git-commit: ""
  git-branch: ""
